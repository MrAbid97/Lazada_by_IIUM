{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ash/Desktop/bro_app/screens/user/UserDetailEditScreen.js\";\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport CustomHeaderButton from \"../../components/UI/HeaderButton\";\nimport { vw } from \"react-native-expo-viewport-units\";\n\nvar UserDetailEditScreen = function UserDetailEditScreen(props) {\n  var token = useSelector(function (state) {\n    return state.auth.token;\n  });\n\n  var _React$useState = React.useState('name'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState('email'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState('unconfirmed'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      address = _React$useState6[0],\n      setAddress = _React$useState6[1];\n\n  var _React$useState7 = React.useState('**********'),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      loadDone = _React$useState10[0],\n      setLoadDone = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      error = _React$useState12[0],\n      setError = _React$useState12[1];\n\n  if (loadDone) {\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyD480eQzY9RTRTmRSTBhSKYqQlmhmEJBKM', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        idToken: token\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var data = response['users'][0];\n\n      if (data.displayName) {\n        setName(data.displayName);\n      } else {\n        setName(\"New User\");\n      }\n\n      setAddress(data.photoUrl);\n      setEmail(data.email);\n      setLoadDone(false);\n    });\n  }\n\n  var updateData = function updateData() {\n    var data = {\n      idToken: token,\n      email: email,\n      displayName: name,\n      photoUrl: address\n    };\n\n    if (password !== '**********') {\n      if (password.length < 5) {\n        setError('Password is too short');\n      } else {\n        data['password'] = password;\n      }\n    }\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyD480eQzY9RTRTmRSTBhSKYqQlmhmEJBKM', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(response);\n\n      if (response.error) {\n        setError(response.error.message);\n      } else {\n        props.navigation.navigate('ProductsOverview');\n      }\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    style: {\n      alignText: 'center',\n      flexWrap: 'wrap',\n      display: 'flex',\n      flex: 1,\n      padding: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    keyboardType: \"default\",\n    placeholder: \"email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, email)), React.createElement(View, {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Name\"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    keyboardType: \"default\",\n    placeholder: \"username\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    initialvalue: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, name)), React.createElement(View, {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Address\"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    keyboardType: \"default\",\n    placeholder: \"Address\",\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    initialvalue: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, address)), React.createElement(View, {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    keyboardType: \"default\",\n    placeholder: \"password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    initialvalue: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, password), React.createElement(Text, {\n    style: {\n      color: 'red',\n      wordwrap: 'break-word',\n      width: '100%',\n      fontSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, error)), React.createElement(Button, {\n    onPress: updateData,\n    title: \"SAVE\",\n    color: \"#841584\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: 'Edit Your Info',\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: CustomHeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        title: \"Menu\",\n        iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: CustomHeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        title: \"Edit\",\n        iconName: Platform.OS === 'android' ? 'md-create' : 'ios-create',\n        onPress: function onPress() {\n          navData.navigation.navigate('EditProduct');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }));\n    }\n  };\n};\nexport var UserDetailEditScreenOptions = function UserDetailEditScreenOptions(navData) {\n  return {\n    headerTitle: 'Update Info'\n  };\n};\nexport default UserDetailEditScreen;\nvar styles = StyleSheet.create({\n  form: {},\n  inputStyle: {\n    width: vw(75),\n    backgroundColor: '#fefefe',\n    marginTop: 0,\n    padding: 3,\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/screens/user/UserDetailEditScreen.js"],"names":["React","useSelector","HeaderButtons","Item","CustomHeaderButton","vw","UserDetailEditScreen","props","token","state","auth","useState","name","setName","email","setEmail","address","setAddress","password","setPassword","loadDone","setLoadDone","error","setError","fetch","method","headers","body","JSON","stringify","idToken","then","response","json","data","displayName","photoUrl","updateData","length","console","log","message","navigation","navigate","alignText","flexWrap","display","flex","padding","margin","styles","inputStyle","text","color","wordwrap","width","fontSize","screenOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight","UserDetailEditScreenOptions","StyleSheet","create","form","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Button, Platform, ScrollView, StyleSheet, Text, TextInput, View} from 'react-native';\r\nimport {useSelector} from 'react-redux';\r\nimport {HeaderButtons, Item} from 'react-navigation-header-buttons';\r\nimport CustomHeaderButton from '../../components/UI/HeaderButton';\r\nimport {vw} from \"react-native-expo-viewport-units\";\r\n\r\n\r\nconst UserDetailEditScreen = props => {\r\n\r\n    const token = useSelector(state => state.auth.token);\r\n    let [name, setName] = React.useState('name');\r\n    let [email, setEmail] = React.useState('email');\r\n    let [address, setAddress] = React.useState('unconfirmed');\r\n    let [password, setPassword] = React.useState('**********');\r\n    let [loadDone, setLoadDone] = React.useState(true);\r\n    let [error, setError] = React.useState(\"\");\r\n    if (loadDone) {\r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyD480eQzY9RTRTmRSTBhSKYqQlmhmEJBKM', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({idToken: token})\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const data = response['users'][0];\r\n                if (data.displayName) {\r\n                    setName(data.displayName);\r\n                } else {\r\n                    setName(\"New User\");\r\n                }\r\n                setAddress(data.photoUrl);\r\n                setEmail(data.email);\r\n                setLoadDone(false);\r\n            });\r\n    }\r\n    const updateData = () => {\r\n        let data = {idToken: token, email: email, displayName: name, photoUrl: address};\r\n        if (password !== '**********') {\r\n            if (password.length < 5) {\r\n                setError('Password is too short');\r\n            } else {\r\n                data['password'] = password;\r\n            }\r\n        }\r\n\r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyD480eQzY9RTRTmRSTBhSKYqQlmhmEJBKM',\r\n            {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.error) {\r\n                    setError(response.error.message);\r\n                } else {\r\n                    props.navigation.navigate('ProductsOverview');\r\n                }\r\n            })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ScrollView style={{\r\n                alignText: 'center',\r\n                flexWrap: 'wrap',\r\n                display: 'flex',\r\n                flex: 1,\r\n                padding: 40,\r\n            }}>\r\n                <View style={{margin: 10}}>\r\n                    <Text>Email</Text>\r\n                    <TextInput\r\n                        style={styles.inputStyle}\r\n                        keyboardType='default'\r\n                        placeholder=\"email\"\r\n                        onChangeText={(text) => setEmail(text)}\r\n                    />\r\n                    <Text>{email}</Text>\r\n                </View>\r\n\r\n                <View style={{margin: 10}}>\r\n                    <Text>Name</Text>\r\n                    <TextInput\r\n                        style={styles.inputStyle}\r\n                        keyboardType='default'\r\n                        placeholder=\"username\"\r\n                        onChangeText={(text) => setName(text)}\r\n                        initialvalue={name}\r\n                    />\r\n                    <Text>{name}</Text>\r\n                </View>\r\n\r\n                <View style={{margin: 10}}>\r\n                    <Text>Address</Text>\r\n                    <TextInput\r\n                        style={styles.inputStyle}\r\n                        keyboardType='default'\r\n                        placeholder=\"Address\"\r\n                        onChangeText={(text) => setAddress(text)}\r\n                        initialvalue={name}\r\n                    />\r\n                    <Text>{address}</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{margin: 10}}>\r\n                    <Text>Password</Text>\r\n                    <TextInput\r\n                        style={styles.inputStyle}\r\n                        keyboardType='default'\r\n                        placeholder=\"password\"\r\n                        onChangeText={(text) => setPassword(text)}\r\n                        initialvalue={password}\r\n                    />\r\n                    <Text>{password}</Text>\r\n                    <Text style={{color: 'red', wordwrap: 'break-word', width: '100%', fontSize: 10}}>{error}</Text>\r\n                </View>\r\n                <Button\r\n                    onPress={updateData}\r\n                    title=\"SAVE\"\r\n                    color=\"#841584\"\r\n                />\r\n\r\n            </ScrollView>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport const screenOptions = (navData) => {\r\n    return {\r\n        headerTitle: 'Edit Your Info',\r\n        headerLeft: () =>\r\n            <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                <Item\r\n                    title=\"Menu\"\r\n                    iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\r\n                    onPress={() => {\r\n                        navData.navigation.toggleDrawer();\r\n                    }}\r\n                />\r\n            </HeaderButtons>,\r\n\r\n        headerRight: () => (\r\n            <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                <Item\r\n                    title=\"Edit\"\r\n                    iconName={Platform.OS === 'android' ? 'md-create' : 'ios-create'}\r\n                    onPress={() => {\r\n                        navData.navigation.navigate('EditProduct');\r\n                    }}\r\n                />\r\n            </HeaderButtons>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const UserDetailEditScreenOptions = (navData) => {\r\n\r\n    return {\r\n        headerTitle: 'Update Info',\r\n    }\r\n}\r\n\r\n\r\nexport default UserDetailEditScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    form: {},\r\n    inputStyle: {\r\n        width: vw(75),\r\n        backgroundColor: '#fefefe',\r\n        marginTop: 0,\r\n        padding: 3,\r\n        fontSize: 24\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
