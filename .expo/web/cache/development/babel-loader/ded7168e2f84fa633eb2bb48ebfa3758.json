{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/ash/Desktop/bro_app/components/UI/Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useReducer } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nvar INPUT_CHANGE = 'INPUT_CHANGE';\nvar INPUT_BLUR = 'INPUT_BLUR';\n\nvar inputReducer = function inputReducer(state, action) {\n  switch (action.type) {\n    case INPUT_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        value: action.value,\n        isValid: action.isValid\n      });\n\n    case INPUT_BLUR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        touched: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar Input = function Input(props) {\n  var _useReducer = useReducer(inputReducer, {\n    value: props.initialValue ? props.initialValue : '',\n    isValid: props.initiallyValid ? props.initiallyValid : false,\n    touched: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      inputState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var onInputChange = props.onInputChange,\n      id = props.id;\n  useEffect(function () {\n    if (inputState.touched) {\n      onInputChange(id, inputState.value, inputState.isValid);\n    }\n  }, [inputState, onInputChange, id]);\n\n  var textChangeHandler = function textChangeHandler(text) {\n    var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    var isValid = true;\n\n    if (props.required && text.trim().length === 0) {\n      isValid = false;\n    }\n\n    if (props.email && !emailRegex.test(text.toLowerCase())) {\n      isValid = false;\n    }\n\n    if (props.min != null && +text < props.min) {\n      isValid = false;\n    }\n\n    if (props.max != null && +text > props.max) {\n      isValid = false;\n    }\n\n    if (props.minLength != null && text.length < props.minLength) {\n      isValid = false;\n    }\n\n    dispatch({\n      type: INPUT_CHANGE,\n      value: text,\n      isValid: isValid\n    });\n  };\n\n  var lostFocusHandler = function lostFocusHandler() {\n    dispatch({\n      type: INPUT_BLUR\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, props.label), React.createElement(TextInput, _extends({}, props, {\n    style: styles.input,\n    value: inputState.value,\n    onChangeText: textChangeHandler,\n    onBlur: lostFocusHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), !inputState.isValid && inputState.touched && React.createElement(View, {\n    style: styles.errorContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, props.errorText)));\n};\n\nvar styles = StyleSheet.create({\n  formControl: {\n    width: '100%'\n  },\n  label: {\n    fontFamily: 'open-sans-bold',\n    marginVertical: 8\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1\n  },\n  errorContainer: {\n    marginVertical: 5\n  },\n  errorText: {\n    fontFamily: 'open-sans',\n    color: 'red',\n    fontSize: 13\n  }\n});\nexport default Input;","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/components/UI/Input.js"],"names":["React","useEffect","useReducer","INPUT_CHANGE","INPUT_BLUR","inputReducer","state","action","type","value","isValid","touched","Input","props","initialValue","initiallyValid","inputState","dispatch","onInputChange","id","textChangeHandler","text","emailRegex","required","trim","length","email","test","toLowerCase","min","max","minLength","lostFocusHandler","styles","formControl","label","input","errorContainer","errorText","StyleSheet","create","width","fontFamily","marginVertical","paddingHorizontal","paddingVertical","borderBottomColor","borderBottomWidth","color","fontSize"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer} from 'react';\r\nimport {StyleSheet, Text, TextInput, View} from 'react-native';\r\n\r\n\r\nconst INPUT_CHANGE = 'INPUT_CHANGE'\r\nconst INPUT_BLUR = 'INPUT_BLUR'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case INPUT_CHANGE:\r\n            return {\r\n                ...state,\r\n                value: action.value,\r\n                isValid: action.isValid\r\n            }\r\n\r\n        case INPUT_BLUR:\r\n            return {\r\n                ...state,\r\n                touched: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n    // use\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue ? props.initialValue : '',\r\n        isValid: props.initiallyValid ? props.initiallyValid : false,\r\n        touched: false\r\n    });\r\n\r\n\r\n    const {onInputChange, id} = props;\r\n\r\n\r\n    useEffect(() => {\r\n        if (inputState.touched) {\r\n            onInputChange(id, inputState.value, inputState.isValid);\r\n        }\r\n    }, [inputState, onInputChange, id]);\r\n\r\n    const textChangeHandler = text => {\r\n        const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let isValid = true;\r\n        if (props.required && text.trim().length === 0) {\r\n            isValid = false;\r\n        }\r\n        if (props.email && !emailRegex.test(text.toLowerCase())) {\r\n            isValid = false;\r\n        }\r\n        if (props.min != null && +text < props.min) {\r\n            isValid = false;\r\n        }\r\n        if (props.max != null && +text > props.max) {\r\n            isValid = false;\r\n        }\r\n        if (props.minLength != null && text.length < props.minLength) {\r\n            isValid = false;\r\n        }\r\n\r\n        dispatch({type: INPUT_CHANGE, value: text, isValid: isValid});\r\n\r\n    }\r\n\r\n\r\n    const lostFocusHandler = () => {\r\n        dispatch({type: INPUT_BLUR})\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.formControl}>\r\n            <Text style={styles.label}>{props.label}</Text>\r\n            <TextInput\r\n                {...props}\r\n                style={styles.input}\r\n                value={inputState.value}\r\n                onChangeText={textChangeHandler}\r\n                onBlur={lostFocusHandler}\r\n            />\r\n            {!inputState.isValid && inputState.touched && (\r\n                <View style={styles.errorContainer}>\r\n                    <Text style={styles.errorText}>{props.errorText}</Text>\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    formControl: {\r\n        width: '100%',\r\n    },\r\n    label: {\r\n        fontFamily: 'open-sans-bold',\r\n        marginVertical: 8,\r\n    },\r\n    input: {\r\n        paddingHorizontal: 2,\r\n        paddingVertical: 5,\r\n        borderBottomColor: '#ccc',\r\n        borderBottomWidth: 1\r\n    },\r\n    errorContainer: {\r\n        marginVertical: 5,\r\n    },\r\n    errorText: {\r\n        fontFamily: 'open-sans',\r\n        color: 'red',\r\n        fontSize: 13\r\n    }\r\n\r\n\r\n});\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}