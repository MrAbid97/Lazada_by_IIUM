{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/ash/Desktop/bro_app/screens/user/EditProductScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport CustomHeaderButton from \"../../components/UI/HeaderButton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as productsActions from \"../../store/actions/products\";\nimport Input from \"../../components/UI/Input\";\nimport Colors from \"../../constants/Colors\";\nvar FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValues: updatedValues,\n      inputValidities: updatedValidities\n    };\n  }\n\n  return state;\n};\n\nvar EditProductScreen = function EditProductScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var prodId = props.route.params ? props.route.params.productId : null;\n  var editedProduct = useSelector(function (state) {\n    return state.products.userProducts.find(function (prod) {\n      return prod.id === prodId;\n    });\n  });\n  var dispatch = useDispatch();\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              base64: true,\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            setImage(result.base64);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : '',\n      description: editedProduct ? editedProduct.description : '',\n      price: ''\n    },\n    inputValidities: {\n      title: !!editedProduct,\n      description: !!editedProduct,\n      price: !!editedProduct\n    },\n    formIsValid: !!editedProduct\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  useEffect(function () {\n    if (error) {\n      Alert.alert('An error occurred!', error, [{\n        text: 'Okay'\n      }]);\n    }\n  }, [error]);\n  var submitHandler = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (formState.formIsValid) {\n              _context2.next = 3;\n              break;\n            }\n\n            Alert.alert('Wrong input!', 'Please check the errors in the form.', [{\n              text: 'Okay'\n            }]);\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            setError(null);\n            setIsLoading(true);\n            _context2.prev = 5;\n\n            if (!editedProduct) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(dispatch(productsActions.updateProduct(prodId, formState.inputValues.title, formState.inputValues.description, image)));\n\n          case 9:\n            _context2.next = 13;\n            break;\n\n          case 11:\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(dispatch(productsActions.createProduct(formState.inputValues.title, formState.inputValues.description, image, parseInt(formState.inputValues.price))));\n\n          case 13:\n            props.navigation.goBack();\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](5);\n            setError(_context2.t0.message);\n\n          case 19:\n            setIsLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[5, 16]], Promise);\n  }, [dispatch, prodId, formState]);\n  useEffect(function () {\n    props.navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(HeaderButtons, {\n          HeaderButtonComponent: CustomHeaderButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }\n        }, React.createElement(Item, {\n          title: \"Menu\",\n          iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n          onPress: function onPress() {\n            props.navigation.toggleDrawer();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }\n        }));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(HeaderButtons, {\n          HeaderButtonComponent: CustomHeaderButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }\n        }, React.createElement(Item, {\n          title: \"Save\",\n          iconName: Platform.OS === 'android' ? 'md-checkmark' : 'ios-checkmark',\n          onPress: submitHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }\n        }));\n      }\n    });\n  }, [submitHandler]);\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, React.createElement(Input, {\n    id: \"title\",\n    label: \"Title\",\n    errorText: \"Please enter a valid title!\",\n    keyboardType: \"default\",\n    autoCapitalize: \"sentences\",\n    autoCorrect: true,\n    returnKeyType: \"next\",\n    onInputChange: inputChangeHandler,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    color: Colors.primary,\n    title: \"Pick Image\",\n    onPress: pickImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }), image != null ? React.createElement(Image, {\n    style: {\n      width: 100,\n      height: 100\n    },\n    source: {\n      uri: \"data:image/png;base64,\" + image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }) : null, React.createElement(Input, {\n    id: \"price\",\n    label: \"Price\",\n    errorText: \"Please enter a valid price!\",\n    keyboardType: \"decimal-pad\",\n    returnKeyType: \"next\",\n    onInputChange: inputChangeHandler,\n    required: true,\n    min: 0.1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }), React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    errorText: \"Please enter a valid description!\",\n    keyboardType: \"default\",\n    autoCapitalize: \"sentences\",\n    autoCorrect: true,\n    multiline: true,\n    numberOfLines: 3,\n    onInputChange: inputChangeHandler,\n    required: true,\n    minLength: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    margin: 20\n  },\n  image: {\n    height: 100,\n    width: 100\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport var EditProductScreenOptions = function EditProductScreenOptions(navData) {\n  var routeParams = navData.route.params ? navData.route.params : {};\n  return {\n    headerTitle: routeParams.productId ? 'Edit Product' : 'Add Product'\n  };\n};\nexport default EditProductScreen;","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/screens/user/EditProductScreen.js"],"names":["React","useCallback","useEffect","useReducer","useState","ImagePicker","HeaderButtons","Item","CustomHeaderButton","useDispatch","useSelector","productsActions","Input","Colors","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","EditProductScreen","props","isLoading","setIsLoading","error","setError","image","setImage","prodId","route","params","productId","editedProduct","products","userProducts","find","prod","id","dispatch","pickImage","launchImageLibraryAsync","base64","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","title","description","price","formState","dispatchFormState","Alert","alert","text","submitHandler","updateProduct","createProduct","parseInt","navigation","goBack","message","setOptions","headerLeft","Platform","OS","toggleDrawer","headerRight","inputChangeHandler","inputIdentifier","inputValue","inputValidity","styles","centered","primary","flex","form","width","height","uri","StyleSheet","create","margin","justifyContent","alignItems","EditProductScreenOptions","navData","routeParams","headerTitle"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useReducer, useState} from 'react';\r\nimport {\r\n    ActivityIndicator,\r\n    Alert,\r\n    Button,\r\n    Image,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    ScrollView,\r\n    StyleSheet,\r\n    View\r\n} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nimport {HeaderButtons, Item} from 'react-navigation-header-buttons';\r\nimport CustomHeaderButton from '../../components/UI/HeaderButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport * as productsActions from '../../store/actions/products';\r\nimport Input from '../../components/UI/Input';\r\nimport Colors from '../../constants/Colors';\r\n\r\n\r\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\r\n\r\n\r\nconst formReducer = (state, action) => {\r\n    if (action.type === FORM_INPUT_UPDATE) {\r\n        const updatedValues = {\r\n            ...state.inputValues,\r\n            [action.input]: action.value\r\n        };\r\n        const updatedValidities = {\r\n            ...state.inputValidities,\r\n            [action.input]: action.isValid\r\n        };\r\n        let updatedFormIsValid = true;\r\n        for (const key in updatedValidities) {\r\n            updatedFormIsValid = updatedFormIsValid && updatedValidities[key]\r\n        }\r\n        return {\r\n            formIsValid: updatedFormIsValid,\r\n            inputValues: updatedValues,\r\n            inputValidities: updatedValidities\r\n        };\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nconst EditProductScreen = props => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const [image, setImage] = useState(null);\r\n\r\n    // const prodId = props.navigation.getParam('productId');\r\n    const prodId = props.route.params ? props.route.params.productId : null;\r\n    const editedProduct = useSelector(state => state.products.userProducts.find(prod => prod.id === prodId));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const pickImage = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            base64: true,\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n        setImage(result.base64);\r\n\r\n    };\r\n\r\n    const [formState, dispatchFormState] = useReducer(\r\n        formReducer,\r\n        {\r\n            inputValues: {\r\n                title: editedProduct ? editedProduct.title : '',\r\n                description: editedProduct ? editedProduct.description : '',\r\n                price: ''\r\n            },\r\n            inputValidities: {\r\n                title: !!editedProduct,\r\n                description: !!editedProduct,\r\n                price: !!editedProduct\r\n            },\r\n            formIsValid: !!editedProduct\r\n        }\r\n    );\r\n\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            Alert.alert('An error occurred!', error, [{text: 'Okay'}])\r\n        }\r\n    }, [error])\r\n\r\n\r\n    const submitHandler = useCallback(async () => {\r\n        if (!formState.formIsValid) {\r\n            Alert.alert(\r\n                'Wrong input!',\r\n                'Please check the errors in the form.',\r\n                [\r\n                    {text: 'Okay'}\r\n                ]\r\n            );\r\n            return;\r\n        }\r\n        setError(null);\r\n        setIsLoading(true);\r\n        try {\r\n            if (editedProduct) {\r\n                // Edit product\r\n                await dispatch(\r\n                    productsActions.updateProduct(\r\n                        prodId,\r\n                        formState.inputValues.title,\r\n                        formState.inputValues.description,\r\n                        image\r\n                    )\r\n                );\r\n            } else {\r\n                // Add New Product\r\n                await dispatch(\r\n                    productsActions.createProduct(\r\n                        formState.inputValues.title,\r\n                        formState.inputValues.description,\r\n                        image,\r\n                        parseInt(formState.inputValues.price)\r\n                    )\r\n                );\r\n            }\r\n            props.navigation.goBack();\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false)\r\n\r\n    }, [dispatch, prodId, formState]);\r\n\r\n    useEffect(() => {\r\n        props.navigation.setOptions({\r\n            headerLeft: () =>\r\n                <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                    <Item\r\n                        title=\"Menu\"\r\n                        iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\r\n                        onPress={() => {\r\n                            props.navigation.toggleDrawer();\r\n                        }}\r\n                    />\r\n                </HeaderButtons>,\r\n            headerRight: () => (\r\n                <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                    <Item\r\n                        title=\"Save\"\r\n                        iconName={Platform.OS === 'android' ? 'md-checkmark' : 'ios-checkmark'}\r\n                        onPress={submitHandler}\r\n                    />\r\n                </HeaderButtons>\r\n            )\r\n        });\r\n    }, [submitHandler]);\r\n\r\n    const inputChangeHandler = useCallback((inputIdentifier, inputValue, inputValidity) => {\r\n        // let isValid = false;\r\n        // if(text.trim().length > 0){\r\n        //     isValid = true;\r\n        // }\r\n        dispatchFormState({\r\n            type: FORM_INPUT_UPDATE,\r\n            value: inputValue,\r\n            isValid: inputValidity,\r\n            input: inputIdentifier\r\n        });\r\n    }, [dispatchFormState]);\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={styles.centered}>\r\n                <ActivityIndicator size='large' color={Colors.primary}/>\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            style={{flex: 1}}\r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n            keyboardVerticalOffset={100}\r\n        >\r\n            <ScrollView>\r\n                <View style={styles.form}>\r\n                    <Input\r\n                        id='title'\r\n                        label='Title'\r\n                        errorText='Please enter a valid title!'\r\n                        keyboardType='default'\r\n                        autoCapitalize='sentences'\r\n                        autoCorrect\r\n                        returnKeyType='next'\r\n                        onInputChange={inputChangeHandler}\r\n                        required\r\n                    />\r\n                    <Button color={Colors.primary} title=\"Pick Image\" onPress={pickImage}/>\r\n                    {image != null ? (\r\n                        <Image style={{width: 100, height: 100}} source={{uri: `data:image/png;base64,${image}`}}/>\r\n                    ) : null}\r\n                    <Input\r\n                        id='price'\r\n                        label='Price'\r\n                        errorText='Please enter a valid price!'\r\n                        keyboardType='decimal-pad'\r\n                        returnKeyType='next'\r\n                        onInputChange={inputChangeHandler}\r\n                        required\r\n                        min={0.1}\r\n                    />\r\n                    <Input\r\n                        id='description'\r\n                        label='Description'\r\n                        errorText='Please enter a valid description!'\r\n                        keyboardType='default'\r\n                        autoCapitalize='sentences'\r\n                        autoCorrect\r\n                        multiline\r\n                        numberOfLines={3}\r\n                        onInputChange={inputChangeHandler}\r\n                        required\r\n                        minLength={5}\r\n                    />\r\n                </View>\r\n            </ScrollView>\r\n        </KeyboardAvoidingView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    form: {\r\n        margin: 20\r\n    },\r\n    image: {\r\n        height: 100,\r\n        width: 100,\r\n    },\r\n    centered: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n\r\n});\r\n\r\nexport const EditProductScreenOptions = (navData) => {\r\n\r\n    // const submitFn = navData.route.params ? navData.route.params.submit : null;\r\n    const routeParams = navData.route.params ? navData.route.params : {};\r\n    return {\r\n        headerTitle: routeParams.productId ? 'Edit Product' : 'Add Product',\r\n\r\n    }\r\n}\r\n\r\nexport default EditProductScreen;\r\n"]},"metadata":{},"sourceType":"module"}