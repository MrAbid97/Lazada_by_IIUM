{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ash/Desktop/bro_app/screens/shop/OrdersScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport CustomHeaderButton from \"../../components/UI/HeaderButton\";\nimport OrderItem from \"../../components/shop/OrderItem\";\nimport * as ordersActions from \"../../store/actions/orders\";\nimport Colors from \"../../constants/Colors\";\n\nvar OrdersScreen = function OrdersScreen(props) {\n  var token = useSelector(function (state) {\n    return state.auth.token;\n  });\n\n  var _React$useState = React.useState('Address'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      address = _React$useState2[0],\n      setAddress = _React$useState2[1];\n\n  fetch('https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyD480eQzY9RTRTmRSTBhSKYqQlmhmEJBKM', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      idToken: token\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    var data = response['users'][0];\n\n    if (data.photoUrl) {\n      setAddress(data.photoUrl);\n    } else {\n      setAddress(\"No Address\");\n    }\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var orders = useSelector(function (state) {\n    return state.orders.orders;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    setIsLoading(true);\n    dispatch(ordersActions.fetchOrders()).then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch]);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (orders.length === 0) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"No orders found, maybe start ordering some products?\"));\n  }\n\n  return React.createElement(FlatList, {\n    data: orders,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(OrderItem, {\n        address: address,\n        amount: itemData.item.totalAmount,\n        date: itemData.item.readableDate,\n        items: itemData.item.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  });\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: \"Your Orders\",\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: CustomHeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        title: \"Menu\",\n        iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }));\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default OrdersScreen;","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/screens/shop/OrdersScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","HeaderButtons","Item","CustomHeaderButton","OrderItem","ordersActions","Colors","OrdersScreen","props","token","state","auth","address","setAddress","fetch","method","headers","body","JSON","stringify","idToken","then","response","json","data","photoUrl","isLoading","setIsLoading","orders","dispatch","fetchOrders","styles","centered","primary","length","flex","justifyContent","alignItems","item","id","itemData","totalAmount","readableDate","items","screenOptions","navData","headerTitle","headerLeft","Platform","OS","navigation","toggleDrawer","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {ActivityIndicator, FlatList, Platform, StyleSheet, Text, View} from 'react-native';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\n\r\nimport {HeaderButtons, Item} from 'react-navigation-header-buttons';\r\nimport CustomHeaderButton from '../../components/UI/HeaderButton';\r\nimport OrderItem from '../../components/shop/OrderItem';\r\n\r\nimport * as ordersActions from '../../store/actions/orders';\r\nimport Colors from '../../constants/Colors';\r\n\r\nconst OrdersScreen = (props) => {\r\n\r\n    const token = useSelector(state => state.auth.token);\r\n    let [address, setAddress] = React.useState('Address');\r\n\r\n    // Fetching Address every time user open cart (Always get the latest one)\r\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyD480eQzY9RTRTmRSTBhSKYqQlmhmEJBKM', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({idToken: token})\r\n    }).then(response => response.json())\r\n        .then(response => {\r\n            const data = response['users'][0];\r\n            if (data.photoUrl) {\r\n                setAddress(data.photoUrl);\r\n            } else {\r\n                setAddress(\"No Address\");\r\n            }\r\n        })\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const orders = useSelector(state => state.orders.orders);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // can't use async await here\r\n        // either use .then or wrap in helper fn and call it in here.\r\n        setIsLoading(true);\r\n        dispatch(ordersActions.fetchOrders()).then(() => {\r\n            setIsLoading(false);\r\n        });\r\n\r\n    }, [dispatch])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={styles.centered}>\r\n                <ActivityIndicator size='large' color={Colors.primary}/>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    if (orders.length === 0) {\r\n        return (\r\n            <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\r\n                <Text>No orders found, maybe start ordering some products?</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FlatList\r\n            data={orders}\r\n            keyExtractor={item => item.id}\r\n            renderItem={itemData =>\r\n                <OrderItem\r\n                    address={address}\r\n                    amount={itemData.item.totalAmount}\r\n                    date={itemData.item.readableDate}\r\n                    items={itemData.item.items}\r\n                />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport const screenOptions = (navData) => {\r\n    return {\r\n        headerTitle: \"Your Orders\",\r\n        headerLeft: () =>\r\n            <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                <Item\r\n                    title=\"Menu\"\r\n                    iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\r\n                    onPress={() => {\r\n                        navData.navigation.toggleDrawer();\r\n                    }}\r\n                />\r\n            </HeaderButtons>,\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    centered: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n})\r\n\r\nexport default OrdersScreen;\r\n"]},"metadata":{},"sourceType":"module"}
