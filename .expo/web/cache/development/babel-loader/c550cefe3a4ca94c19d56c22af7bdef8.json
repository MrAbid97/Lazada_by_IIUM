{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/ash/Desktop/bro_app/screens/user/AuthScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch } from 'react-redux';\nimport Input from \"../../components/UI/Input\";\nimport Card from \"../../components/UI/Card\";\nimport Colors from \"../../constants/Colors\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as authActions from \"../../store/actions/auth\";\nimport { vw } from \"react-native-expo-viewport-units\";\nvar FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValues: updatedValues,\n      inputValidities: updatedValidities\n    };\n  }\n\n  return state;\n};\n\nvar AuthScreen = function AuthScreen(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignup = _useState2[0],\n      setIsSignup = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      email: '',\n      password: ''\n    },\n    inputValidities: {\n      email: false,\n      password: false\n    },\n    formIsValid: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  useEffect(function () {\n    if (error) {\n      if (!formState.formIsValid) {\n        if (!formState.inputValidities.email) {\n          Alert.alert('Error', 'Email is not valid', [{\n            text: 'Okay'\n          }]);\n        } else {\n          if (!formState.inputValidities.password) {\n            Alert.alert('Error', 'Password is not valid', [{\n              text: 'Okay'\n            }]);\n          }\n        }\n      } else {\n        Alert.alert('An Error Occurred!', error, [{\n          text: 'Okay'\n        }]);\n      }\n    }\n  }, [error]);\n\n  var authHandler = function authHandler() {\n    var action;\n    return _regeneratorRuntime.async(function authHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (isSignup) {\n              action = authActions.signup(formState.inputValues.email, formState.inputValues.password);\n            } else {\n              action = authActions.login(formState.inputValues.email, formState.inputValues.password);\n            }\n\n            setError(null);\n            setIsLoading(true);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(action));\n\n          case 6:\n            _context.next = 13;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n            setError(_context.t0.message);\n            setIsLoading(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 8]], Promise);\n  };\n\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: 50,\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#ffedff', '#ffe3ff'],\n    style: styles.gradient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, React.createElement(Card, {\n    style: styles.authContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, React.createElement(Input, {\n    id: \"email\",\n    label: \"E-mail\",\n    keyboardType: \"email-address\",\n    required: true,\n    email: true,\n    autoCapitalize: \"none\",\n    errorText: \"Please enter a valid email address.\",\n    onInputChange: inputChangeHandler,\n    initialValue: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }), React.createElement(Input, {\n    id: \"password\",\n    label: \"Password\",\n    keyboardType: \"default\",\n    secureTextEntry: true,\n    required: true,\n    minLength: 6,\n    autoCapitalize: \"none\",\n    errorText: \"Please enter a valid password.\",\n    onInputChange: inputChangeHandler,\n    initialValue: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: Colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }) : React.createElement(Button, {\n    title: isSignup ? \"Sign Up\" : \"Login\",\n    color: Colors.primary,\n    onPress: authHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    title: \"Switch to \" + (isSignup ? 'Login' : 'Sign Up') + \" \",\n    color: Colors.accent,\n    onPress: function onPress() {\n      setIsSignup(function (prevState) {\n        return !prevState;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport var screenOptions = {\n  headerTitle: 'Authenticate'\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  gradient: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  authContainer: {\n    width: vw(80),\n    maxWidth: 400,\n    maxHeight: 400,\n    padding: 20\n  },\n  buttonContainer: {\n    marginTop: 10\n  }\n});\nexport default AuthScreen;","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/screens/user/AuthScreen.js"],"names":["React","useCallback","useEffect","useReducer","useState","useDispatch","Input","Card","Colors","LinearGradient","authActions","vw","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","AuthScreen","props","dispatch","isSignup","setIsSignup","isLoading","setIsLoading","error","setError","email","password","formState","dispatchFormState","Alert","alert","text","authHandler","signup","login","console","log","message","inputChangeHandler","inputIdentifier","inputValue","inputValidity","Platform","OS","styles","screen","gradient","authContainer","buttonContainer","primary","accent","prevState","screenOptions","headerTitle","StyleSheet","create","flex","justifyContent","alignItems","width","maxWidth","maxHeight","padding","marginTop"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useReducer, useState} from 'react';\r\nimport {\r\n    ActivityIndicator,\r\n    Alert,\r\n    Button,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    ScrollView,\r\n    StyleSheet,\r\n    View\r\n} from 'react-native';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport Input from '../../components/UI/Input';\r\nimport Card from '../../components/UI/Card';\r\nimport Colors from '../../constants/Colors';\r\n\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport * as authActions from '../../store/actions/auth';\r\nimport {vw} from \"react-native-expo-viewport-units\";\r\n\r\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\r\n\r\nconst formReducer = (state, action) => {\r\n    if (action.type === FORM_INPUT_UPDATE) {\r\n        const updatedValues = {\r\n            ...state.inputValues,\r\n            [action.input]: action.value\r\n        };\r\n        const updatedValidities = {\r\n            ...state.inputValidities,\r\n            [action.input]: action.isValid\r\n        };\r\n        let updatedFormIsValid = true;\r\n        for (const key in updatedValidities) {\r\n            updatedFormIsValid = updatedFormIsValid && updatedValidities[key]\r\n        }\r\n        return {\r\n            formIsValid: updatedFormIsValid,\r\n            inputValues: updatedValues,\r\n            inputValidities: updatedValidities\r\n        };\r\n    }\r\n    return state;\r\n}\r\n\r\nconst AuthScreen = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const [formState, dispatchFormState] = useReducer(\r\n        formReducer,\r\n        {\r\n            inputValues: {\r\n                email: '',\r\n                password: ''\r\n            },\r\n            inputValidities: {\r\n                email: false,\r\n                password: false\r\n            },\r\n            formIsValid: false\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            if (!formState.formIsValid) {\r\n                if (!formState.inputValidities.email) {\r\n                    Alert.alert('Error', 'Email is not valid', [{text: 'Okay'}]);\r\n                } else {\r\n                    if (!formState.inputValidities.password) {\r\n                        Alert.alert('Error', 'Password is not valid', [{text: 'Okay'}]);\r\n                    }\r\n                }\r\n            } else {\r\n                Alert.alert('An Error Occurred!', error, [{text: 'Okay'}]);\r\n            }\r\n        }\r\n    }, [error]);\r\n\r\n    const authHandler = async () => {\r\n        let action;\r\n\r\n        if (isSignup) {\r\n            action = authActions.signup(\r\n                formState.inputValues.email,\r\n                formState.inputValues.password,\r\n            );\r\n        } else {\r\n            action = authActions.login(\r\n                formState.inputValues.email,\r\n                formState.inputValues.password\r\n            );\r\n        }\r\n\r\n        setError(null);\r\n        setIsLoading(true);\r\n        try {\r\n            await dispatch(action);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.message);\r\n            setIsLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const inputChangeHandler = useCallback((inputIdentifier, inputValue, inputValidity) => {\r\n        dispatchFormState({\r\n            type: FORM_INPUT_UPDATE,\r\n            value: inputValue,\r\n            isValid: inputValidity,\r\n            input: inputIdentifier\r\n        });\r\n    }, [dispatchFormState]);\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n            keyboardVerticalOffset={50}\r\n            style={styles.screen}\r\n        >\r\n            <LinearGradient colors={['#ffedff', '#ffe3ff']} style={styles.gradient}>\r\n                <Card style={styles.authContainer}>\r\n                    <ScrollView>\r\n                        <Input\r\n                            id=\"email\"\r\n                            label=\"E-mail\"\r\n                            keyboardType=\"email-address\"\r\n                            required\r\n                            email\r\n                            autoCapitalize=\"none\"\r\n                            errorText=\"Please enter a valid email address.\"\r\n                            onInputChange={inputChangeHandler}\r\n                            initialValue=''\r\n                        />\r\n                        <Input\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            keyboardType=\"default\"\r\n                            secureTextEntry\r\n                            required\r\n                            minLength={6}\r\n                            autoCapitalize=\"none\"\r\n                            errorText=\"Please enter a valid password.\"\r\n                            onInputChange={inputChangeHandler}\r\n                            initialValue=''\r\n                        />\r\n\r\n                        <View style={styles.buttonContainer}>\r\n                            {isLoading ? (\r\n                                <ActivityIndicator size='small' color={Colors.primary}/>\r\n                            ) : (\r\n                                <Button\r\n                                    title={isSignup ? \"Sign Up\" : \"Login\"}\r\n                                    color={Colors.primary}\r\n                                    onPress={authHandler}\r\n                                />\r\n                            )}\r\n                        </View>\r\n                        <View style={styles.buttonContainer}>\r\n                            <Button\r\n                                title={`Switch to ${isSignup ? 'Login' : 'Sign Up'} `}\r\n                                color={Colors.accent}\r\n                                onPress={() => {\r\n                                    setIsSignup(prevState => !prevState);\r\n                                }}\r\n                            />\r\n                        </View>\r\n\r\n                    </ScrollView>\r\n                </Card>\r\n            </LinearGradient>\r\n\r\n        </KeyboardAvoidingView>\r\n    );\r\n};\r\n\r\n\r\nexport const screenOptions = {\r\n    headerTitle: 'Authenticate',\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n    },\r\n    gradient: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    authContainer: {\r\n        width: vw(80),\r\n        maxWidth: 400,\r\n        maxHeight: 400,\r\n        padding: 20,\r\n    },\r\n    buttonContainer: {\r\n        marginTop: 10,\r\n    },\r\n\r\n});\r\n\r\n\r\nexport default AuthScreen;\r\n"]},"metadata":{},"sourceType":"module"}