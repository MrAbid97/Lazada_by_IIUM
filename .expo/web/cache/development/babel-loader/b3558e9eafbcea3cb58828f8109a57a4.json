{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Product from \"../../models/product\";\nexport var DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport var CREATE_PRODUCT = \"CREATE_PRODUCT\";\nexport var UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport var SET_PRODUCTS = \"SET_PRODUCTS\";\nexport var fetchProduct = function fetchProduct() {\n  return function _callee(dispatch, getState) {\n    var userId, response, resData, loadedProducts, key;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            userId = getState().auth.userId;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch('https://ecom-c0f34-default-rtdb.asia-southeast1.firebasedatabase.app/'));\n\n          case 4:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('Something went wrong !');\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            resData = _context.sent;\n            loadedProducts = [];\n\n            for (key in resData) {\n              loadedProducts.push(new Product(key, resData[key].ownerId, resData[key].title, resData[key].imageUrl, resData[key].description, resData[key].price));\n            }\n\n            dispatch({\n              type: SET_PRODUCTS,\n              products: loadedProducts,\n              userProducts: loadedProducts.filter(function (prod) {\n                return prod.ownerId === userId;\n              })\n            });\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n};\nexport var deleteProduct = function deleteProduct(productId) {\n  return function _callee2(dispatch, getState) {\n    var token, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = getState().auth.token;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://ecom-c0f34.firebaseio.com/products/\" + productId + \".json?auth=\" + token, {\n              method: 'DELETE'\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 6;\n              break;\n            }\n\n            throw new Error(\"Something went wrong!\");\n\n          case 6:\n            dispatch({\n              type: DELETE_PRODUCT,\n              pid: productId\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var createProduct = function createProduct(title, description, imageUrl, price) {\n  return function _callee3(dispatch, getState) {\n    var token, userId, response, resData;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            token = getState().auth.token;\n            userId = getState().auth.userId;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://ecom-c0f34.firebaseio.com/products.json?auth=\" + token, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: title,\n                description: description,\n                imageUrl: imageUrl,\n                price: price,\n                ownerId: userId\n              })\n            }));\n\n          case 4:\n            response = _context3.sent;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            resData = _context3.sent;\n            dispatch({\n              type: CREATE_PRODUCT,\n              productData: {\n                id: resData.name,\n                title: title,\n                description: description,\n                imageUrl: imageUrl,\n                price: price,\n                ownerId: userId\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var updateProduct = function updateProduct(id, title, description, imageUrl) {\n  return function _callee4(dispatch, getState) {\n    var token, response;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            token = getState().auth.token;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://ecom-c0f34.firebaseio.com/products/\" + id + \".json?auth=\" + token, {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: title,\n                description: description,\n                imageUrl: imageUrl\n              })\n            }));\n\n          case 3:\n            response = _context4.sent;\n\n            if (response.ok) {\n              _context4.next = 6;\n              break;\n            }\n\n            throw new Error(\"Something went wrong!\");\n\n          case 6:\n            dispatch({\n              type: UPDATE_PRODUCT,\n              pid: id,\n              productData: {\n                title: title,\n                description: description,\n                imageUrl: imageUrl\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/store/actions/products.js"],"names":["Product","DELETE_PRODUCT","CREATE_PRODUCT","UPDATE_PRODUCT","SET_PRODUCTS","fetchProduct","dispatch","getState","userId","auth","fetch","response","ok","Error","json","resData","loadedProducts","key","push","ownerId","title","imageUrl","description","price","type","products","userProducts","filter","prod","deleteProduct","productId","token","method","pid","createProduct","headers","body","JSON","stringify","productData","id","name","updateProduct"],"mappings":"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","sourcesContent":["import Product from \"../../models/product\";\r\n\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const CREATE_PRODUCT = \"CREATE_PRODUCT\";\r\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\r\nexport const SET_PRODUCTS = \"SET_PRODUCTS\";\r\n\r\nexport const fetchProduct = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n        const userId = getState().auth.userId;\r\n        const response = await fetch('https://ecom-c0f34-default-rtdb.asia-southeast1.firebasedatabase.app/')\r\n            if(!response.ok){\r\n                // handle 400 and 500 status code\r\n                throw new Error('Something went wrong !')\r\n            }\r\n            const resData = await response.json();\r\n            const loadedProducts = [];\r\n            for(const key in resData){\r\n                loadedProducts.push(new Product(\r\n                    key,\r\n                    resData[key].ownerId,\r\n                    resData[key].title,\r\n                    resData[key].imageUrl,\r\n                    resData[key].description,\r\n                    resData[key].price\r\n                ))\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_PRODUCTS,\r\n                products: loadedProducts,\r\n                userProducts: loadedProducts.filter(prod => prod.ownerId === userId)\r\n            })\r\n        } catch (err) {\r\n\r\n            throw err;\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport const deleteProduct = (productId) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const token = getState().auth.token;\r\n        const response = await fetch(`https://ecom-c0f34.firebaseio.com/products/${productId}.json?auth=${token}`, {\r\n            method: 'DELETE',\r\n        });\r\n\r\n        if(!response.ok){\r\n            throw new Error(\"Something went wrong!\");\r\n        }\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT,\r\n            pid: productId\r\n        })\r\n    }\r\n};\r\n\r\nexport const createProduct = (title, description, imageUrl, price) => {\r\n    return async (dispatch, getState) => {\r\n        const token = getState().auth.token;\r\n        const userId = getState().auth.userId;\r\n        // any async code\r\n        const response = await fetch(`https://ecom-c0f34.firebaseio.com/products.json?auth=${token}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                description,\r\n                imageUrl,\r\n                price,\r\n                ownerId: userId\r\n            })\r\n        });\r\n\r\n        const resData = await response.json();\r\n\r\n        dispatch({\r\n            type: CREATE_PRODUCT,\r\n            productData: {\r\n                id: resData.name,\r\n                title,\r\n                description,\r\n                imageUrl,\r\n                price,\r\n                ownerId: userId\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProduct = (id, title, description, imageUrl) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const token = getState().auth.token;\r\n        const response = await fetch(`https://ecom-c0f34.firebaseio.com/products/${id}.json?auth=${token}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                description,\r\n                imageUrl,\r\n            })\r\n        });\r\n\r\n        if(!response.ok){\r\n            throw new Error(\"Something went wrong!\");\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT,\r\n            pid: id,\r\n            productData: { title, description, imageUrl }\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}