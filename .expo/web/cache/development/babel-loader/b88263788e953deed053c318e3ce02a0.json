{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/cart\";\nimport CartItem from \"../../models/cart-item\";\nimport { ADD_ORDER } from \"../actions/orders\";\nimport { DELETE_PRODUCT } from \"../actions/products\";\nvar initialState = {\n  items: {},\n  totalAmount: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      var addedProduct = action.product;\n      var prodPrice = addedProduct.price;\n      var prodTitle = addedProduct.title;\n      var updatedOrNewCartItem;\n\n      if (state.items[addedProduct.id]) {\n        updatedOrNewCartItem = new CartItem(state.items[addedProduct.id].quantity + 1, prodPrice, prodTitle, state.items[addedProduct.id].sum + prodPrice);\n      } else {\n        updatedOrNewCartItem = new CartItem(1, prodPrice, prodTitle, prodPrice);\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: _objectSpread(_objectSpread({}, state.items), {}, _defineProperty({}, addedProduct.id, updatedOrNewCartItem)),\n        totalAmount: state.totalAmount + prodPrice\n      });\n\n    case REMOVE_FROM_CART:\n      var selectedCartItem = state.items[action.pid];\n      var currentQty = selectedCartItem.quantity;\n      var updatedCartItems;\n\n      if (currentQty > 1) {\n        var updatedCartItem = new CartItem(selectedCartItem.quantity - 1, selectedCartItem.productPrice, selectedCartItem.productTitle, selectedCartItem.sum - selectedCartItem.productPrice);\n        updatedCartItems = _objectSpread(_objectSpread({}, state.items), {}, _defineProperty({}, action.pid, updatedCartItem));\n      } else {\n        updatedCartItems = _objectSpread({}, state.items);\n        delete updatedCartItems[action.pid];\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: updatedCartItems,\n        totalAmount: state.totalAmount - selectedCartItem.productPrice\n      });\n\n    case ADD_ORDER:\n      return initialState;\n\n    case DELETE_PRODUCT:\n      if (!state.items[action.pid]) {\n        return state;\n      }\n\n      var updatedItems = _objectSpread({}, state.items);\n\n      var itemTotal = state.items[action.pid].sum;\n      delete updatedItems[action.pid];\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: updatedItems,\n        totalAmount: state.totalAmount - itemTotal\n      });\n  }\n\n  return state;\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/store/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","CartItem","ADD_ORDER","DELETE_PRODUCT","initialState","items","totalAmount","cartReducer","state","action","type","addedProduct","product","prodPrice","price","prodTitle","title","updatedOrNewCartItem","id","quantity","sum","selectedCartItem","pid","currentQty","updatedCartItems","updatedCartItem","productPrice","productTitle","updatedItems","itemTotal"],"mappings":"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","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/cart\";\r\nimport CartItem from \"../../models/cart-item\";\r\nimport { ADD_ORDER } from \"../actions/orders\";\r\nimport { DELETE_PRODUCT } from \"../actions/products\";\r\n\r\nconst initialState = {\r\n    items: {},\r\n    totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_TO_CART:\r\n            const addedProduct = action.product;\r\n            const prodPrice = addedProduct.price;\r\n            const prodTitle = addedProduct.title;\r\n            let updatedOrNewCartItem;\r\n            if(state.items[addedProduct.id]){\r\n                // already have the item in cart\r\n                updatedOrNewCartItem = new CartItem(\r\n                    state.items[addedProduct.id].quantity + 1, \r\n                    prodPrice,\r\n                    prodTitle,\r\n                    state.items[addedProduct.id].sum + prodPrice\r\n                );\r\n            } else {\r\n                updatedOrNewCartItem = new CartItem(1,prodPrice, prodTitle, prodPrice);\r\n            }\r\n            return {\r\n                ...state,\r\n                items: {...state.items, [addedProduct.id]: updatedOrNewCartItem},\r\n                totalAmount: state.totalAmount + prodPrice\r\n            }\r\n        \r\n        case REMOVE_FROM_CART:\r\n            const selectedCartItem = state.items[action.pid];\r\n            const currentQty = selectedCartItem.quantity;\r\n            let updatedCartItems;\r\n            if(currentQty > 1){\r\n                // reduce qty by 1\r\n                const updatedCartItem = new CartItem(\r\n                    selectedCartItem.quantity - 1, \r\n                    selectedCartItem.productPrice, \r\n                    selectedCartItem.productTitle, \r\n                    selectedCartItem.sum - selectedCartItem.productPrice \r\n                );\r\n                updatedCartItems = {...state.items, [action.pid]: updatedCartItem }\r\n            } else {\r\n                // erase\r\n                updatedCartItems = {...state.items };\r\n                delete updatedCartItems[action.pid];\r\n            }\r\n            return {\r\n                ...state,\r\n                items: updatedCartItems,\r\n                totalAmount: state.totalAmount - selectedCartItem.productPrice\r\n            };\r\n\r\n        case ADD_ORDER:\r\n            return initialState;\r\n        case DELETE_PRODUCT:\r\n            if(!state.items[action.pid]){\r\n                return state;\r\n            }\r\n            const updatedItems = {...state.items};\r\n            const itemTotal = state.items[action.pid].sum;\r\n            delete updatedItems[action.pid];\r\n            return {\r\n                ...state,\r\n                items: updatedItems,\r\n                totalAmount: state.totalAmount - itemTotal\r\n            }\r\n\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}