{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ash/Desktop/bro_app/screens/user/RemoveProductScreen.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport * as prodActions from \"../../store/actions/products\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport CustomHeaderButton from \"../../components/UI/HeaderButton\";\nimport Colors from \"../../constants/Colors\";\nimport { vh } from \"react-native-expo-viewport-units\";\n\nvar ProductsRemoveScreen = function ProductsRemoveScreen(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var products = useSelector(function (state) {\n    return state.products.availableProducts;\n  });\n\n  var _useState7 = useState(products),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchResult = _useState8[0],\n      setSearchResult = _useState8[1];\n\n  var dispatch = useDispatch();\n  var loadProducts = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsRefreshing(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(prodActions.fetchProduct()));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            setError(_context.t0.message);\n\n          case 9:\n            setIsRefreshing(false);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n  useEffect(function () {\n    setIsLoading(true);\n    loadProducts().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadProducts]);\n\n  var selectItemHandler = function selectItemHandler(id, title) {\n    props.navigation.navigate('ProductDetail', {\n      productId: id,\n      productTitle: title\n    });\n  };\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"An error occured.\"), React.createElement(Button, {\n      title: \"Try again\",\n      onPress: loadProducts,\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (!isLoading && products.length === 0) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"No products found. Maybe start adding some!\"));\n  }\n\n  var deleteProduct = function deleteProduct(id) {\n    return _regeneratorRuntime.async(function deleteProduct$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(dispatch(prodActions.deleteProduct(id)));\n\n          case 2:\n            loadProducts().then(function () {\n              setIsLoading(false);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    style: {\n      height: vh(80)\n    },\n    onRefresh: loadProducts,\n    refreshing: isRefreshing,\n    data: searchResult.length > 0 ? searchResult : products,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(ProductItem, {\n        image: itemData.item.imageUrl,\n        title: itemData.item.title,\n        price: itemData.item.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        color: \"red\",\n        title: \"Delete\",\n        onPress: function onPress() {\n          dispatch(prodActions.deleteProduct(itemData.itemData));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport var ProductsRemoveScreenOptions = function ProductsRemoveScreenOptions(navData) {\n  return {\n    headerTitle: 'Remove products',\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: CustomHeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        title: \"Menu\",\n        iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: CustomHeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        title: \"Cart\",\n        iconName: Platform.OS === 'android' ? 'md-cart' : 'ios-cart',\n        onPress: function onPress() {\n          navData.navigation.navigate('Cart');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }));\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default ProductsRemoveScreen;","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/screens/user/RemoveProductScreen.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","ProductItem","prodActions","HeaderButtons","Item","CustomHeaderButton","Colors","vh","ProductsRemoveScreen","props","isLoading","setIsLoading","isRefreshing","setIsRefreshing","error","setError","products","state","availableProducts","searchResult","setSearchResult","dispatch","loadProducts","fetchProduct","message","then","selectItemHandler","id","title","navigation","navigate","productId","productTitle","styles","centered","primary","length","deleteProduct","height","item","itemData","imageUrl","price","ProductsRemoveScreenOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport {ActivityIndicator, Button, FlatList, Platform, StyleSheet, Text, View} from 'react-native';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport ProductItem from '../../components/shop/ProductItem';\r\nimport * as prodActions from '../../store/actions/products';\r\n\r\n\r\nimport {HeaderButtons, Item} from 'react-navigation-header-buttons';\r\nimport CustomHeaderButton from '../../components/UI/HeaderButton';\r\nimport Colors from '../../constants/Colors';\r\nimport {vh} from \"react-native-expo-viewport-units\";\r\n\r\nconst ProductsRemoveScreen = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isRefreshing, setIsRefreshing] = useState(false);\r\n    const [error, setError] = useState();\r\n    let products = useSelector(state => state.products.availableProducts);\r\n    let [searchResult, setSearchResult] = useState(products);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const loadProducts = useCallback(async () => {\r\n        setIsRefreshing(true);\r\n        try {\r\n            await dispatch(prodActions.fetchProduct());\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n        setIsRefreshing(false);\r\n    }, [dispatch, setIsLoading, setError])\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        loadProducts().then(() => {\r\n            setIsLoading(false);\r\n        });\r\n\r\n    }, [dispatch, loadProducts])\r\n\r\n    const selectItemHandler = (id, title) => {\r\n        props.navigation.navigate('ProductDetail', {\r\n            productId: id,\r\n            productTitle: title\r\n        });\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <View style={styles.centered}>\r\n                <Text>An error occured.</Text>\r\n                <Button title=\"Try again\" onPress={loadProducts} color={Colors.primary}/>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={styles.centered}>\r\n                <ActivityIndicator size='large' color={Colors.primary}/>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    if (!isLoading && products.length === 0) {\r\n        return (\r\n            <View style={styles.centered}>\r\n                <Text>No products found. Maybe start adding some!</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    const deleteProduct = async (id) => {\r\n        await dispatch(prodActions.deleteProduct(id));\r\n        loadProducts().then(() => {\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            <FlatList\r\n                style={{height: vh(80)}}\r\n                onRefresh={loadProducts}\r\n                refreshing={isRefreshing}\r\n                data={searchResult.length > 0 ? searchResult : products}\r\n                keyExtractor={item => item.id}\r\n                renderItem={itemData => (\r\n                    <ProductItem\r\n                        image={itemData.item.imageUrl}\r\n                        title={itemData.item.title}\r\n                        price={itemData.item.price}>\r\n                        <Button\r\n                            color=\"red\"\r\n                            title=\"Delete\"\r\n                            onPress={() => {\r\n                                dispatch(prodActions.deleteProduct(itemData.itemData))\r\n                            }}\r\n                        />\r\n                    </ProductItem>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ProductsRemoveScreenOptions = (navData) => {\r\n    return {\r\n        headerTitle: 'Remove products',\r\n        headerLeft: () =>\r\n            <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                <Item\r\n                    title=\"Menu\"\r\n                    iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\r\n                    onPress={() => {\r\n                        navData.navigation.toggleDrawer();\r\n                    }}\r\n                />\r\n            </HeaderButtons>,\r\n        headerRight: () =>\r\n            <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                <Item\r\n                    title=\"Cart\"\r\n                    iconName={Platform.OS === 'android' ? 'md-cart' : 'ios-cart'}\r\n                    onPress={() => {\r\n                        navData.navigation.navigate('Cart')\r\n                    }}\r\n                />\r\n            </HeaderButtons>\r\n    };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    centered: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n});\r\n\r\nexport default ProductsRemoveScreen;\r\n"]},"metadata":{},"sourceType":"module"}