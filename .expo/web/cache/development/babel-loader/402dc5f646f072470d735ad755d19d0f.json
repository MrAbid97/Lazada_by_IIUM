{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ash/Desktop/bro_app/App.js\";\nimport React, { useState } from 'react';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport ReduxThunk from 'redux-thunk';\nimport productsReducer from \"./store/reducers/products\";\nimport cartReducer from \"./store/reducers/cart\";\nimport ordersReducer from \"./store/reducers/orders\";\nimport authReducer from \"./store/reducers/auth\";\nimport AppNavigator from \"./navigation/AppNavigator\";\nvar rootReducer = combineReducers({\n  products: productsReducer,\n  cart: cartReducer,\n  orders: ordersReducer,\n  auth: authReducer\n});\nvar store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    'open-sans': require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    'open-sans-bold': require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setFontLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(AppNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/App.js"],"names":["React","useState","applyMiddleware","combineReducers","createStore","Provider","AppLoading","Font","ReduxThunk","productsReducer","cartReducer","ordersReducer","authReducer","AppNavigator","rootReducer","products","cart","orders","auth","store","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,WAA1C,QAA4D,OAA5D;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,UAAR,QAAyB,MAAzB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,eAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AAGA,IAAMC,WAAW,GAAGX,eAAe,CAAC;AAChCY,EAAAA,QAAQ,EAAEN,eADsB;AAEhCO,EAAAA,IAAI,EAAEN,WAF0B;AAGhCO,EAAAA,MAAM,EAAEN,aAHwB;AAIhCO,EAAAA,IAAI,EAAEN;AAJ0B,CAAD,CAAnC;AAOA,IAAMO,KAAK,GAAGf,WAAW,CACrBU,WADqB,EAErBZ,eAAe,CAACM,UAAD,CAFM,CAAzB;;AAMA,IAAMY,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,SAAOb,IAAI,CAACc,SAAL,CAAe;AAClB,iBAAaC,OAAO,uCADF;AAElB,sBAAkBA,OAAO;AAFP,GAAf,CAAP;AAIH,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEUtB,QAAQ,CAAC,KAAD,CAFlB;AAAA;AAAA,MAEnBuB,UAFmB;AAAA,MAEPC,aAFO;;AAI1B,MAAI,CAACD,UAAL,EAAiB;AACb,WACI,oBAAC,UAAD;AACI,MAAA,UAAU,EAAEJ,UADhB;AAEI,MAAA,QAAQ,EAAE,oBAAM;AACZK,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AAED,SACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH","sourcesContent":["import React, {useState} from 'react';\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport {AppLoading} from 'expo';\r\nimport * as Font from 'expo-font';\r\nimport ReduxThunk from 'redux-thunk';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport productsReducer from './store/reducers/products';\r\nimport cartReducer from './store/reducers/cart';\r\nimport ordersReducer from './store/reducers/orders';\r\nimport authReducer from './store/reducers/auth';\r\nimport AppNavigator from './navigation/AppNavigator';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    orders: ordersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(ReduxThunk)\r\n    // composeWithDevTools()\r\n);\r\n\r\nconst fetchFonts = () => {\r\n    return Font.loadAsync({\r\n        'open-sans': require('./assets/fonts/OpenSans-Regular.ttf'),\r\n        'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf')\r\n    })\r\n}\r\n\r\nexport default function App() {\r\n\r\n    const [fontLoaded, setFontLoaded] = useState(false);\r\n\r\n    if (!fontLoaded) {\r\n        return (\r\n            <AppLoading\r\n                startAsync={fetchFonts}\r\n                onFinish={() => {\r\n                    setFontLoaded(true)\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <AppNavigator/>\r\n        </Provider>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}