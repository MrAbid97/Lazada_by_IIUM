{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ash/Desktop/bro_app/screens/shop/ProductsOverviewScreen.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport * as prodActions from \"../../store/actions/products\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport CustomHeaderButton from \"../../components/UI/HeaderButton\";\nimport Colors from \"../../constants/Colors\";\nimport SearchBar from \"react-native-elements/dist/searchbar/SearchBar-android\";\nimport { vh } from \"react-native-expo-viewport-units\";\n\nvar ProductsOverviewScreen = function ProductsOverviewScreen(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var products = useSelector(function (state) {\n    return state.products.availableProducts;\n  });\n\n  var _useState7 = useState(products),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchResult = _useState8[0],\n      setSearchResult = _useState8[1];\n\n  var dispatch = useDispatch();\n  var loadProducts = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsRefreshing(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(prodActions.fetchProduct()));\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n\n          case 10:\n            setIsRefreshing(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n  useEffect(function () {\n    var unsubscribe = props.navigation.addListener('focus', loadProducts);\n    return function () {\n      unsubscribe();\n    };\n  }, [loadProducts]);\n  useEffect(function () {\n    setIsLoading(true);\n    loadProducts().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadProducts]);\n\n  var selectItemHandler = function selectItemHandler(id, title) {\n    props.navigation.navigate('ProductDetail', {\n      productId: id,\n      productTitle: title\n    });\n  };\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"An error occured.\"), React.createElement(Button, {\n      title: \"Try again\",\n      onPress: loadProducts,\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (!isLoading && products.length === 0) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"No products found. Maybe start adding some!\"));\n  }\n\n  var updateSearch = function updateSearch(value) {\n    setSearchResult(products.filter(function (x) {\n      return x.title.toLowerCase().includes(value);\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SearchBar, {\n    inputStyle: {\n      backgroundColor: '#fefefe'\n    },\n    containerStyle: {\n      backgroundColor: 'white',\n      borderWidth: 0,\n      borderRadius: 2\n    },\n    placeholder: \"Type Here...\",\n    onChangeText: updateSearch,\n    platform: 'android',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    style: {\n      height: vh(80)\n    },\n    onRefresh: loadProducts,\n    refreshing: isRefreshing,\n    data: searchResult.length > 0 ? searchResult : products,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(ProductItem, {\n        image: itemData.item.imageUrl,\n        title: itemData.item.title,\n        price: itemData.item.price,\n        onSelect: function onSelect() {\n          selectItemHandler(itemData.item.id, itemData.item.title);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        color: Colors.primary,\n        title: \"View Details\",\n        onPress: function onPress() {\n          selectItemHandler(itemData.item.id, itemData.item.title);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        color: Colors.primary,\n        title: \"Add\",\n        onPress: function onPress() {\n          dispatch(cartActions.addToCart(itemData.item));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: 'All products',\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: CustomHeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        title: \"Menu\",\n        iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: CustomHeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        title: \"Cart\",\n        iconName: Platform.OS === 'android' ? 'md-cart' : 'ios-cart',\n        onPress: function onPress() {\n          navData.navigation.navigate('Cart');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }));\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default ProductsOverviewScreen;","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/screens/shop/ProductsOverviewScreen.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","ProductItem","cartActions","prodActions","HeaderButtons","Item","CustomHeaderButton","Colors","SearchBar","vh","ProductsOverviewScreen","props","isLoading","setIsLoading","isRefreshing","setIsRefreshing","error","setError","products","state","availableProducts","searchResult","setSearchResult","dispatch","loadProducts","fetchProduct","message","unsubscribe","navigation","addListener","then","selectItemHandler","id","title","navigate","productId","productTitle","styles","centered","primary","length","updateSearch","value","filter","x","toLowerCase","includes","backgroundColor","borderWidth","borderRadius","height","item","itemData","imageUrl","price","addToCart","screenOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport {ActivityIndicator, Button, FlatList, Platform, StyleSheet, Text, View} from 'react-native';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport ProductItem from '../../components/shop/ProductItem';\r\n\r\nimport * as cartActions from '../../store/actions/cart';\r\nimport * as prodActions from '../../store/actions/products';\r\n\r\n\r\nimport {HeaderButtons, Item} from 'react-navigation-header-buttons';\r\nimport CustomHeaderButton from '../../components/UI/HeaderButton';\r\nimport Colors from '../../constants/Colors';\r\nimport SearchBar from \"react-native-elements/dist/searchbar/SearchBar-android\";\r\nimport {vh} from \"react-native-expo-viewport-units\";\r\n\r\nconst ProductsOverviewScreen = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isRefreshing, setIsRefreshing] = useState(false);\r\n    const [error, setError] = useState();\r\n    let products = useSelector(state => state.products.availableProducts);\r\n    let [searchResult, setSearchResult] = useState(products);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const loadProducts = useCallback(async () => {\r\n        setError(null);\r\n        setIsRefreshing(true);\r\n        try {\r\n            await dispatch(prodActions.fetchProduct());\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n        setIsRefreshing(false);\r\n    }, [dispatch, setIsLoading, setError])\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = props.navigation.addListener('focus', loadProducts);\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [loadProducts])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        loadProducts().then(() => {\r\n            setIsLoading(false);\r\n        });\r\n\r\n    }, [dispatch, loadProducts])\r\n\r\n    const selectItemHandler = (id, title) => {\r\n        props.navigation.navigate('ProductDetail', {\r\n            productId: id,\r\n            productTitle: title\r\n        });\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <View style={styles.centered}>\r\n                <Text>An error occured.</Text>\r\n                <Button title=\"Try again\" onPress={loadProducts} color={Colors.primary}/>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={styles.centered}>\r\n                <ActivityIndicator size='large' color={Colors.primary}/>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    if (!isLoading && products.length === 0) {\r\n        return (\r\n            <View style={styles.centered}>\r\n                <Text>No products found. Maybe start adding some!</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    const updateSearch = (value) => {\r\n        setSearchResult(products.filter(x => x.title.toLowerCase().includes(value)))\r\n    };\r\n    return (\r\n        <>\r\n            <SearchBar\r\n                inputStyle={{backgroundColor: '#fefefe',}}\r\n                containerStyle={{backgroundColor: 'white', borderWidth: 0, borderRadius: 2}}\r\n                placeholder=\"Type Here...\"\r\n                onChangeText={updateSearch}\r\n                platform={'android'}/>\r\n            <FlatList\r\n                style={{height: vh(80)}}\r\n                onRefresh={loadProducts}\r\n                refreshing={isRefreshing}\r\n                data={searchResult.length > 0 ? searchResult : products}\r\n                keyExtractor={item => item.id}\r\n                renderItem={itemData => (\r\n                    <ProductItem\r\n                        image={itemData.item.imageUrl}\r\n                        title={itemData.item.title}\r\n                        price={itemData.item.price}\r\n                        onSelect={() => {\r\n                            selectItemHandler(itemData.item.id, itemData.item.title);\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            color={Colors.primary}\r\n                            title=\"View Details\"\r\n                            onPress={() => {\r\n                                selectItemHandler(itemData.item.id, itemData.item.title);\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            color={Colors.primary}\r\n                            title=\"Add\"\r\n                            onPress={() => {\r\n                                dispatch(cartActions.addToCart(itemData.item));\r\n                            }}\r\n                        />\r\n                    </ProductItem>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport const screenOptions = (navData) => {\r\n    return {\r\n        headerTitle: 'All products',\r\n        headerLeft: () =>\r\n            <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                <Item\r\n                    title=\"Menu\"\r\n                    iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\r\n                    onPress={() => {\r\n                        navData.navigation.toggleDrawer();\r\n                    }}\r\n                />\r\n            </HeaderButtons>,\r\n        headerRight: () =>\r\n            <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>\r\n                <Item\r\n                    title=\"Cart\"\r\n                    iconName={Platform.OS === 'android' ? 'md-cart' : 'ios-cart'}\r\n                    onPress={() => {\r\n                        navData.navigation.navigate('Cart')\r\n                    }}\r\n                />\r\n            </HeaderButtons>\r\n\r\n    };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    centered: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n});\r\n\r\nexport default ProductsOverviewScreen;\r\n"]},"metadata":{},"sourceType":"module"}