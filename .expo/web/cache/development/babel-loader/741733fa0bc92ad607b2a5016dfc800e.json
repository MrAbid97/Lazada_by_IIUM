{"ast":null,"code":"var _jsxFileName = \"/home/ash/Desktop/bro_app/screens/shop/ProductDetailScreen.js\";\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport { vw } from \"react-native-expo-viewport-units\";\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var productId = props.route.params.productId;\n  var selectedProduct = useSelector(function (state) {\n    return state.products.availableProducts.find(function (prod) {\n      return prod.id === productId;\n    });\n  });\n  var dispatch = useDispatch();\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: selectedProduct.imageUrl\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    color: Colors.primary,\n    title: \"Add to Cart\",\n    onPress: function onPress() {\n      dispatch(cartActions.addToCart(selectedProduct));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: styles.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"RM \", selectedProduct.price.toFixed(2), \" \"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, selectedProduct.description, \" \"));\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: navData.route.params.productTitle\n  };\n};\nvar styles = StyleSheet.create({\n  image: {\n    width: vw(100),\n    height: 300\n  },\n  actions: {\n    marginVertical: 10,\n    alignItems: 'center'\n  },\n  price: {\n    fontSize: 20,\n    color: '#888',\n    textAlign: 'center',\n    marginVertical: 20,\n    fontFamily: 'open-sans-bold'\n  },\n  description: {\n    fontSize: 14,\n    textAlign: 'center',\n    marginHorizontal: 20,\n    fontFamily: 'open-sans'\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["/home/ash/Desktop/bro_app/screens/shop/ProductDetailScreen.js"],"names":["React","useDispatch","useSelector","Colors","cartActions","vw","ProductDetailScreen","props","productId","route","params","selectedProduct","state","products","availableProducts","find","prod","id","dispatch","styles","image","uri","imageUrl","actions","primary","addToCart","price","toFixed","description","screenOptions","navData","headerTitle","productTitle","StyleSheet","create","width","height","marginVertical","alignItems","fontSize","color","textAlign","fontFamily","marginHorizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,WAAZ;AACA,SAAQC,EAAR,QAAiB,kCAAjB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAEnC,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,SAArC;AACA,MAAMG,eAAe,GAAGT,WAAW,CAAC,UAAAU,KAAK;AAAA,WACrCA,KAAK,CAACC,QAAN,CAAeC,iBAAf,CAAiCC,IAAjC,CAAsC,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYT,SAAhB;AAAA,KAA1C,CADqC;AAAA,GAAN,CAAnC;AAGA,MAAMU,QAAQ,GAAGjB,WAAW,EAA5B;AACA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEkB,MAAM,CAACC,KAArB;AAA4B,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAEV,eAAe,CAACW;AAAtB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEpB,MAAM,CAACqB,OAAtB;AAA+B,IAAA,KAAK,EAAC,aAArC;AAAmD,IAAA,OAAO,EAAE,mBAAM;AAC9DN,MAAAA,QAAQ,CAACd,WAAW,CAACqB,SAAZ,CAAsBd,eAAtB,CAAD,CAAR;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA+Bf,eAAe,CAACe,KAAhB,CAAsBC,OAAtB,CAA8B,CAA9B,CAA/B,MAPJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCjB,eAAe,CAACiB,WAAlD,MARJ,CADJ;AAYH,CAnBD;;AAqBA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACtC,SAAO;AACHC,IAAAA,WAAW,EAAED,OAAO,CAACrB,KAAR,CAAcC,MAAd,CAAqBsB;AAD/B,GAAP;AAGH,CAJM;AAMP,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC7Bd,EAAAA,KAAK,EAAE;AACHe,IAAAA,KAAK,EAAE9B,EAAE,CAAC,GAAD,CADN;AAEH+B,IAAAA,MAAM,EAAE;AAFL,GADsB;AAK7Bb,EAAAA,OAAO,EAAE;AACLc,IAAAA,cAAc,EAAE,EADX;AAELC,IAAAA,UAAU,EAAE;AAFP,GALoB;AAS7BZ,EAAAA,KAAK,EAAE;AACHa,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,SAAS,EAAE,QAHR;AAIHJ,IAAAA,cAAc,EAAE,EAJb;AAKHK,IAAAA,UAAU,EAAE;AALT,GATsB;AAgB7Bd,EAAAA,WAAW,EAAE;AACTW,IAAAA,QAAQ,EAAE,EADD;AAETE,IAAAA,SAAS,EAAE,QAFF;AAGTE,IAAAA,gBAAgB,EAAE,EAHT;AAITD,IAAAA,UAAU,EAAE;AAJH;AAhBgB,CAAlB,CAAf;AAwBA,eAAepC,mBAAf","sourcesContent":["import React from 'react';\r\nimport {Button, Image, ScrollView, StyleSheet, Text, View} from 'react-native';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Colors from '../../constants/Colors';\r\nimport * as cartActions from '../../store/actions/cart';\r\nimport {vw} from \"react-native-expo-viewport-units\";\r\n\r\nconst ProductDetailScreen = (props) => {\r\n\r\n    const productId = props.route.params.productId;\r\n    const selectedProduct = useSelector(state =>\r\n        state.products.availableProducts.find(prod => prod.id === productId)\r\n    );\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <ScrollView>\r\n            <Image style={styles.image} source={{uri: selectedProduct.imageUrl}}/>\r\n            <View style={styles.actions}>\r\n                <Button color={Colors.primary} title=\"Add to Cart\" onPress={() => {\r\n                    dispatch(cartActions.addToCart(selectedProduct));\r\n                }}/>\r\n            </View>\r\n            <Text style={styles.price}>RM {selectedProduct.price.toFixed(2)} </Text>\r\n            <Text style={styles.description}>{selectedProduct.description} </Text>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport const screenOptions = (navData) => {\r\n    return {\r\n        headerTitle: navData.route.params.productTitle\r\n    };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    image: {\r\n        width: vw(100),\r\n        height: 300\r\n    },\r\n    actions: {\r\n        marginVertical: 10,\r\n        alignItems: 'center'\r\n    },\r\n    price: {\r\n        fontSize: 20,\r\n        color: '#888',\r\n        textAlign: 'center',\r\n        marginVertical: 20,\r\n        fontFamily: 'open-sans-bold'\r\n    },\r\n    description: {\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n        marginHorizontal: 20,\r\n        fontFamily: 'open-sans'\r\n    }\r\n});\r\n\r\nexport default ProductDetailScreen;\r\n"]},"metadata":{},"sourceType":"module"}